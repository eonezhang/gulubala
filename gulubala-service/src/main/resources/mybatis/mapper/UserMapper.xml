<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penglecode.gulubala.common.model.UserMapper">
	
	<insert id="insertUser" parameterType="User" statementType="PREPARED" useGeneratedKeys="true" keyProperty="userId">
		INSERT INTO users(
			id,
			phone,
			email,
			password,
			registerType,
			status,
			lastLoginAt,
			createdAt
		) VALUES (
			#{userId, jdbcType=BIGINT},
			#{mobilePhone, jdbcType=VARCHAR},
			#{email, jdbcType=VARCHAR},
			#{encryptedPassword, jdbcType=VARCHAR},
			#{registerType, jdbcType=INTEGER},
			#{status, jdbcType=INTEGER},
			#{lastLoginTime, jdbcType=VARCHAR},
			#{createTime, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateUser4Login" parameterType="java.util.Map" statementType="PREPARED">
		UPDATE users a
		   SET a.lastLoginAt 	= #{loginTime, jdbcType=VARCHAR},
		   	   a.loginTimes		= a.loginTimes + 1
		 WHERE a.id = #{userId, jdbcType=BIGINT}
	</update>
	
	<update id="incrUserFollows" parameterType="java.util.Map" statementType="PREPARED">
		UPDATE users a
		   SET a.follows 		= a.follows + 1,
		   	   a.updatedAt		= #{updateTime, jdbcType=VARCHAR}
		 WHERE a.id = #{userId, jdbcType=BIGINT}
	</update>
	
	<update id="decrUserFollows" parameterType="java.util.Map" statementType="PREPARED">
		UPDATE users a
		   SET a.follows 		= IF(a.follows > 0, a.follows - 1, 0),
		   	   a.updatedAt		= #{updateTime, jdbcType=VARCHAR}
		 WHERE a.id = #{userId, jdbcType=BIGINT}
	</update>
	
	<update id="incrUserHots" parameterType="java.util.Map" statementType="PREPARED">
		UPDATE users a
		   SET a.hots 			= a.hots + 1,
		   	   a.updatedAt		= #{updateTime, jdbcType=VARCHAR}
		 WHERE a.id = #{userId, jdbcType=BIGINT}
	</update>
	
	<update id="incrUserPraises" parameterType="java.util.Map" statementType="PREPARED">
		UPDATE users a
		   SET a.praises 		= a.praises + 1,
		   	   a.updatedAt		= #{updateTime, jdbcType=VARCHAR}
		 WHERE a.id = #{userId, jdbcType=BIGINT}
	</update>
	
	<select id="getUserById" parameterType="java.lang.Long" statementType="PREPARED" resultType="User">
		SELECT a.id					userId,
			   a.nickname			nickName,
			   a.phone				mobilePhone,
			   a.email				email,
			   a.password			encryptedPassword,
			   a.registerType		registerType,
			   a.vip				vip,
			   a.gurz				authenticated,
			   a.score				score,
			   a.loginTimes			loginTimes,
			   a.remark				remark,
			   a.iconUrl			iconUrl,
			   a.follows			follows,
			   a.hots				hots,
			   a.praises			praises,
			   a.sex				sex,
			   a.birthday			birthday,
			   a.status				status,
			   DATE_FORMAT(a.lastLoginAt, '%Y-%m-%d %T')	lastLoginTime,
			   DATE_FORMAT(a.createdAt, '%Y-%m-%d %T')		createTime
		  FROM users a
		 WHERE a.id = #{userId, jdbcType=BIGINT}
	</select>
	
	<select id="getThinUserById" parameterType="java.lang.Long" statementType="PREPARED" resultType="User">
		SELECT a.id					userId,
			   a.nickname			nickName,
			   a.phone				mobilePhone,
			   a.email				email,
			   a.password			encryptedPassword,
			   a.registerType		registerType,
			   a.gurz				authenticated,
			   a.status				status,
			   DATE_FORMAT(a.createdAt, '%Y-%m-%d %T')	createTime
		  FROM users a
		 WHERE a.id = #{userId, jdbcType=BIGINT}
	</select>
	
	<select id="getUserByEmail" parameterType="java.lang.String" statementType="PREPARED" resultType="User">
		SELECT a.id					userId,
			   a.nickname			nickName,
			   a.phone				mobilePhone,
			   a.email				email,
			   a.password			encryptedPassword,
			   a.registerType		registerType,
			   a.vip				vip,
			   a.gurz				authenticated,
			   a.score				score,
			   a.loginTimes			loginTimes,
			   a.remark				remark,
			   a.iconUrl			iconUrl,
			   a.follows			follows,
			   a.hots				hots,
			   a.praises			praises,
			   a.sex				sex,
			   a.birthday			birthday,
			   a.status				status,
			   DATE_FORMAT(a.lastLoginAt, '%Y-%m-%d %T')	lastLoginTime,
			   DATE_FORMAT(a.createdAt, '%Y-%m-%d %T')		createTime
		  FROM users a
		 WHERE a.email = #{email, jdbcType=VARCHAR}
	</select>
	
	<select id="getUserByMobile" parameterType="java.lang.String" statementType="PREPARED" resultType="User">
		SELECT a.id					userId,
			   a.nickname			nickName,
			   a.phone				mobilePhone,
			   a.email				email,
			   a.password			encryptedPassword,
			   a.registerType		registerType,
			   a.vip				vip,
			   a.gurz				authenticated,
			   a.score				score,
			   a.loginTimes			loginTimes,
			   a.remark				remark,
			   a.iconUrl			iconUrl,
			   a.follows			follows,
			   a.hots				hots,
			   a.praises			praises,
			   a.sex				sex,
			   a.birthday			birthday,
			   a.status				status,
			   DATE_FORMAT(a.lastLoginAt, '%Y-%m-%d %T')	lastLoginTime,
			   DATE_FORMAT(a.createdAt, '%Y-%m-%d %T')		createTime
		  FROM users a
		 WHERE a.phone = #{mobilePhone, jdbcType=VARCHAR}
	</select>
	
	<select id="isMobilePhoneExists" parameterType="java.lang.String" statementType="PREPARED" resultType="java.lang.Boolean">
		SELECT COUNT(1)
		  FROM users a
		 WHERE a.phone = #{mobilePhone, jdbcType=VARCHAR}
	</select>
	
	<select id="isEmailExists" parameterType="java.lang.String" statementType="PREPARED" resultType="java.lang.Boolean">
		SELECT COUNT(1)
		  FROM users a
		 WHERE a.email = #{email, jdbcType=VARCHAR}
	</select>
	
</mapper>