<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- dubbo服务生产者配置 -->
	<!-- 提供方用名，用于计算依赖关系，不是匹配条件，不要与消费方一样 -->
	<dubbo:application name="gulubala-service-provider" logger="slf4j"/>
	
	<!-- 使用zookeeper注册中心暴露发现服务地址 -->
	<dubbo:registry address="${dubbo.registry.address}" client="curator"/>
	
	<!-- 以dubbo协议暴露一份服务用来给内部系统(通过dubbo系统)调用 -->
	<dubbo:protocol name="dubbo" port="20880"/>
	<!-- 以rest协议暴露一份服务用来给外部系统(通过http协议)调用 -->
	<!-- 采用外部应用服务器的servlet容器来做rest server,注意端口号一定要与外部应用的端口号一致 -->
    <dubbo:protocol name="rest" port="${dubbo.protocol.port}" server="servlet" contextpath="${dubbo.protocol.contextpath}"
    				extension="com.penglecode.gulubala.common.dubbo.resteasy.Jackson2ObjectMapperProvider,
    						   com.penglecode.gulubala.common.dubbo.filter.RestRpcAuthInterceptor,
    						   com.penglecode.gulubala.common.dubbo.filter.RestRpcResultWrappHandler,
    						   com.penglecode.gulubala.common.dubbo.filter.RestRpcUserLoggingInterceptor,
    						   com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter"/>
   	
	<!-- 服务配置 -->
	<dubbo:service interface="com.penglecode.gulubala.service.common.MessageSendService" ref="messageSendService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.auth.AppAuthService" ref="appAuthService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.user.UserService" ref="userService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.category.MediaCategoryService" ref="mediaCategoryService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.singer.SingerService" ref="singerService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.music.MusicService" ref="musicService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.music.MusicAlbumService" ref="musicAlbumService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.music.MusicListService" ref="musicListService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.music.MusicDanmuService" ref="musicDanmuService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.music.MusicFavoriteService" ref="musicFavoriteService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.music.MusicCommentService" ref="musicCommentService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.music.MusicPlayHistoryService" ref="musicPlayHistoryService" protocol="dubbo,rest"/>
	<dubbo:service interface="com.penglecode.gulubala.service.user.UserFollowService" ref="userFollowService" protocol="dubbo,rest"/>
</beans>