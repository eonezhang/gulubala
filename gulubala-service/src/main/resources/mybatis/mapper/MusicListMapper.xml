<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penglecode.gulubala.common.model.MusicListMapper">
	
	<insert id="insertMusicList" parameterType="MusicList" statementType="PREPARED" useGeneratedKeys="true" keyProperty="listId">
		INSERT INTO songlists(
			id,
			name,
			pictureUrl,
			userId,
			songIds,
			remark,
			createdAt
		) VALUES (
			#{listId, jdbcType=BIGINT},
			#{listName, jdbcType=VARCHAR},
			#{pictureUrl, jdbcType=VARCHAR},
			#{userId, jdbcType=BIGINT},
			#{musicIds, jdbcType=VARCHAR},
			#{remark, jdbcType=VARCHAR},
			#{createTime, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="incrMusicListComments" parameterType="java.lang.Long" statementType="PREPARED">
		UPDATE songlists a SET a.comments = a.comments + 1 WHERE a.id = #{listId, jdbcType=BIGINT}
	</update>
	
	<update id="incrMusicListPlays" parameterType="java.lang.Long" statementType="PREPARED">
		UPDATE songlists a SET a.plays = a.plays + 1 WHERE a.id = #{listId, jdbcType=BIGINT}
	</update>
	
	<update id="incrMusicListPraises" parameterType="java.lang.Long" statementType="PREPARED">
		UPDATE songlists a SET a.praises = a.praises + 1 WHERE a.id = #{listId, jdbcType=BIGINT}
	</update>
	
	<update id="incrMusicListCollects" parameterType="java.lang.Long" statementType="PREPARED">
		UPDATE songlists a SET a.collects = a.collects + 1 WHERE a.id = #{listId, jdbcType=BIGINT}
	</update>
	
	<update id="updateMusicIds" parameterType="java.util.Map" statementType="PREPARED">
		UPDATE songlists a 
		   SET a.songIds 	= #{musicIds},
		   	   a.updatedAt	= #{updateTime, jdbcType=VARCHAR}
		 WHERE a.id = #{listId, jdbcType=BIGINT}
	</update>
	
	<delete id="deleteMusicListById" parameterType="java.lang.Long" statementType="PREPARED">
		DELETE a FROM songlists a WHERE a.id = #{listId, jdbcType=BIGINT}
	</delete>
	
	<select id="getMusicListById" parameterType="java.lang.Long" statementType="PREPARED" resultType="MusicList">
		SELECT a.id 				listId,
			   a.name				listName,
			   a.pictureUrl			pictureUrl,
			   a.userId				userId,
			   a.songIds			musicIds,
			   a.comments			comments,
			   a.praises			praises,
			   a.collects			collects,
			   a.plays				plays,
			   a.remark				remark,
			   DATE_FORMAT(a.createdAt, '%Y-%m-%d %T')	createTime,
			   DATE_FORMAT(a.updatedAt, '%Y-%m-%d %T')	updateTime
		  FROM songlists a
		 WHERE a.id = #{listId, jdbcType=BIGINT}
	</select>
	
	<select id="getMusicLists" parameterType="java.util.Map" statementType="PREPARED" resultType="MusicList">
		SELECT a.id 				listId,
			   a.name				listName,
			   a.pictureUrl			pictureUrl,
			   a.userId				userId,
			   a.songIds			musicIds,
			   a.comments			comments,
			   a.praises			praises,
			   a.collects			collects,
			   a.plays				plays,
			   a.remark				remark,
			   DATE_FORMAT(a.createdAt, '%Y-%m-%d %T')	createTime,
			   DATE_FORMAT(a.updatedAt, '%Y-%m-%d %T')	updateTime
		  FROM songlists a
		 WHERE 1=1
		<if test="@com.penglecode.gulubala.common.mybatis.MybatisUtils@isNotEmpty(userId)">
		   AND a.userId = #{userId, jdbcType=BIGINT}
		</if>
		<if test="@com.penglecode.gulubala.common.mybatis.MybatisUtils@isNotEmpty(orderby)">
		   ORDER BY ${orderby} ${order}
		</if>
	</select>
	
	<select id="getMusicLists_count" parameterType="java.util.Map" statementType="PREPARED" resultType="java.lang.Integer">
		SELECT COUNT(1)
		  FROM songlists a
		 WHERE 1=1
		<if test="@com.penglecode.gulubala.common.mybatis.MybatisUtils@isNotEmpty(userId)">
		   AND a.userId = #{userId, jdbcType=BIGINT}
		</if>
	</select>
	
</mapper>